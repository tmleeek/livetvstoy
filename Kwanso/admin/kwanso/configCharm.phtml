<?php
$_htmlId = $this->getHtmlId() ? $this->getHtmlId() : '_' . uniqid();

$_colspan = 2;
if (!$this->_addAfter) {
    $_colspan -= 1;
}
$_colspan = $_colspan > 1 ? 'colspan="' . $_colspan . '"' : '';
?>

<div class="grid" id="grid<?php echo $_htmlId ?>" style="position: relative;">
    <table cellpadding="0" cellspacing="0" class="border">
        <tbody>

            <tr class="headings" id="headings<?php echo $_htmlId ?>">
            <?php foreach ($this->_columns as $columnName => $column):?>
                <th><?php echo $column['label'] ?></th>
            <?php endforeach;?>
                <th <?php echo $_colspan?>></th>
            </tr>

            <tr id="addRow<?php echo $_htmlId ?>">
                <td colspan="<?php echo count($this->_columns) ?>"></td>
                <td <?php echo $_colspan?>>

                </td>
            </tr>

        </tbody>
    </table>
    <input type="hidden" name="<?php echo $this->getElement()->getName() ?>[__empty]" value="" />
    <ul id="imageslist<?php echo $_htmlId ?>" style="position: absolute;"></ul>
</div>
<div id="empty<?php echo $_htmlId ?>">
    <button style="" onclick="" class="scalable add" type="button" id="emptyAddBtn<?php echo $_htmlId ?>">
        <span><span><span><?php echo $this->_addButtonLabel ?></span></span></span>
    </button>
</div>


<script type="text/javascript">
//<![CDATA[
// create row creator
var arrayRow<?php echo $_htmlId ?> = {
    // define row prototypeJS template
    template : new Template(
        '<tr id="#{_id}">'
<?php foreach ($this->_columns as $columnName => $column):?>
            //+'<td>'
            +'<td class="#{_id}-<?php echo $columnName; ?>">'
                +'<?php echo $this->_renderCellTemplate($columnName)?>'
            +'<\/td>'
<?php endforeach;?>
<?php if ($this->_addAfter):?>
            +'<td><button onclick="" class="scalable add" type="button" id="addAfterBtn#{_id}"><span><span><span><?php echo Mage::helper('adminhtml')->__('Add after') ?><\/span><\/span><\/span><\/button><\/td>'
<?php endif;?>
    ),

    rowsCount : 0,

    add : function(templateData, insertAfterId)
    {
        // generate default template data
        if ('' == templateData) {
            var d = new Date();
            var templateData = {
<?php foreach ($this->_columns as $columnName => $column):?>
                <?php echo $columnName ?> : '',
<?php endforeach;?>
                _id : '_' + d.getTime() + '_' + d.getMilliseconds()
            };
        }

        // insert before last row
        if ('' == insertAfterId) {
            Element.insert($('addRow<?php echo $_htmlId ?>'), {before: this.template.evaluate(templateData)});
        }
        // insert after specified row
        else {
            Element.insert($(insertAfterId), {after: this.template.evaluate(templateData)});
        }

        // NEW CODE
            // set the selected drop-down list item
            <?php foreach ($this->_columns as $columnName => $column): ?>
                var websiteOptions = $$('#'+templateData._id + '-' + 'website' + ' option');
                //var cronOptions = $$('#'+templateData._id + '-' + 'cron' + ' option');

                if(websiteOptions.length) {
                    for (var index = 0; index < websiteOptions.length; ++index) {
                        var option = websiteOptions[index];
                        if (option.getAttribute('value') == templateData.<?php echo $columnName ?>) {
                            option.selected = true;
                        }
                    }
                }

                /*if(cronOptions.length) {
                    for (var index = 0; index < cronOptions.length; ++index) {
                        var option = cronOptions[index];
                        if (option.getAttribute('value') == templateData.<?php //echo $columnName ?>) {
                            option.selected = true;
                        }
                    }
                }*/

            <?php endforeach; ?>
        // END NEW CODE

<?php if ($this->_addAfter):?>
        Event.observe('addAfterBtn' + templateData._id, 'click', this.add.bind(this, '', templateData._id));
<?php endif;?>

        this.rowsCount += 1;
    },

    del : function(rowId)
    {
        $(rowId).remove();
        this.rowsCount -= 1;
        if (0 == this.rowsCount) {
            this.showButtonOnly();
        }
    },

    showButtonOnly : function()
    {
        $('grid<?php echo $_htmlId ?>').hide();
        $('empty<?php echo $_htmlId ?>').show();
    }
}

// bind add action to "Add" button in last row
//Event.observe('addToEndBtn<?php echo $_htmlId ?>', 'click', arrayRow<?php echo $_htmlId ?>.add.bind(arrayRow<?php echo $_htmlId ?>, '', ''));

// add existing rows
<?php
$_addAfterId = "headings{$_htmlId}";
foreach ($this->getArrayRows() as $_rowId => $_row) {
    echo "arrayRow{$_htmlId}.add(" . $_row->toJson() . ", '{$_addAfterId}');\n";
    $_addAfterId = $_rowId;
}
?>

// initialize standalone button
$('empty<?php echo $_htmlId ?>').hide();
Event.observe('emptyAddBtn<?php echo $_htmlId ?>', 'click', function () {
    $('grid<?php echo $_htmlId ?>').show();
    $('empty<?php echo $_htmlId ?>').hide();
    arrayRow<?php echo $_htmlId ?>.add('', '');
});

// if no rows, hide grid and show button only
<?php if (!$this->getArrayRows()):?>
arrayRow<?php echo $_htmlId ?>.showButtonOnly();
<?php endif;?>

// toggle the grid, if element is disabled (depending on scope)
<?php if ($this->getElement()->getDisabled()):?>
toggleValueElements({checked:true}, $('grid<?php echo $_htmlId ?>').parentNode);
<?php endif;?>
//]]>

function braceletsFiles(id) {
    if (!id) { id = 'campains444'; }
    var container = document.getElementById(id);
    if (container.nextSibling) {
        while (container.nextSibling) {
            container.parentNode.removeChild(container.nextSibling);
            if (!container.nextSibling) { break; }
        }
    }
    var n = container.files.length;
    if (n > 1) {
        for (var i = 0; i < n; ++i) {
          var name = container.files.item(i).name;
          var newPre = document.createElement('pre');
          newPre.setAttribute("contentEditable", "true");
          newPre.innerHTML = name;
          container.parentNode.insertBefore(newPre, container.nextSibling);
      }
  }
}

function charmsFiles() {
    braceletsFiles('campains445');
}

function flyoutFiles() {
    braceletsFiles('campains446');
}

</script>
